# Copyright 2019 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "frontend.conf"

appName="pensions-lifetime-allowance-frontend"

application.router=prod.Routes

application.langs = "en,cy"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.FrontendModule"
play.modules.enabled += "config.Module"
play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.FrontendFilters"

# Custom error handler
play.http.errorHandler = "config.frontendErrorHandler"
play.http.filters = "Filters"

application.session.httpOnly=true
play.filters.headers.contentSecurityPolicy= "default-src 'self' 'unsafe-inline' localhost:9310 localhost:9032 localhost:9250 www.google-analytics.com data:"


play.filters.csrf.header.bypassHeaders {
    X-Requested-With = "*"
    Csrf-Token = "nocheck"
}

csrfexceptions.whitelist=["/test-only/protections/insert", "/test-only/protections/removeAll", "/test-only/individuals/:nino/protections"]

template-amazon-s3-host = "localhost"
template-amazon-s3-port = 9310
template-amazon-s3-protocol = "http"
template-amazon-s3-path = "/template/mustache"

controllers {
    controllers.AccountController{
        needsAuth = false
        needsLogging = true
        needsAuditing = true
    }

    controllers.AmendsController{
        needsAuth = false
        needsLogging = true
        needsAuditing = true
    }

    controllers.ConfirmationController{
        needsAuth = false
        needsLogging = true
        needsAuditing = true
    }

    controllers.ExitSurveyController{
        needsAuth = false
        needsLogging = true
        needsAuditing = true
    }

    controllers.IP2016Controller{
        needsAuth = false
        needsLogging = true
        needsAuditing = true
    }

    controllers.LookupController{
        needsAuth = false
        needsLogging = true
        needsAuditing = true
    }

    controllers.PrintPdfController{
        needsAuth = false
        needsLogging = true
        needsAuditing = false
    }

    controllers.PlaLanguageController{
        needsAuth = false
        needsLogging = true
        needsAuditing = true
    }

    controllers.PrintController{
        needsAuth = false
        needsLogging = true
        needsAuditing = true
    }

    controllers.ReadProtectionsController{
        needsAuth = false
        needsLogging = true
        needsAuditing = true
    }

    controllers.ResultController{
        needsAuth = false
        needsLogging = true
        needsAuditing = true
    }

    controllers.SummaryController{
        needsAuth = false
        needsLogging = true
        needsAuditing = true
    }

    controllers.TimeoutController{
        needsAuth = false
        needsLogging = true
        needsAuditing = true
    }

    controllers.UnauthorisedController{
        needsAuth = false
        needsLogging = true
        needsAuditing = true
    }

    controllers.WithdrawnController{
        needsAuth = false
        needsLogging = true
        needsAuditing = true
    }

    controllers.WithdrawProtectionController{
        needsAuth = false
        needsLogging = true
        needsAuditing = true
    }
}

metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = true
}

auditing {
    enabled = true
    traceRequests = true
    consumer {
        baseUri {
            host = localhost
            port = 8100
        }
    }
}

assets {
    version = "3.2.2"
    version = ${?ASSETS_FRONTEND_VERSION}
    minified = true
    minified = ${?ASSETS_FRONTEND_MINIFIED}
    url = "http://localhost:9032/assets/"
}

google-analytics.token = "UA-43414424-11"

Test.microservice.services {
  cachable.session-cache {
    host = localhost
    port = 8400
    domain = keystore
  }
}

Dev.microservice.services {
  cachable.session-cache {
    host = localhost
    port = 8400
    domain = keystore
  }
}

microservice {
    metrics {
        graphite {
            host = localhost
            port = 2003
            prefix = play.${appName}.
            enabled = false
        }
    }

    services {
        pensions-lifetime-allowance {
            host=localhost
            port=9011
        }

        pla-dynamic-stub {
            protocol = http
            host=localhost
            port=9012
        }

        citizen-details {
            host=localhost
            port=9337
        }

        identity-verification {
            host=localhost
            port=9938
        }

        contact-frontend {
            host=localhost
            port=9250
        }

        auth {
            host=localhost
            port=8500
        }

        pertax-frontend {
            host=localhost
            port=9232
        }

        cachable.session-cache {
            host=localhost
            port=8400
            domain=keystore
        }

        exclusions {
            copetab=false
        }

        features {
            identityVerification=true
        }

        pdf-generator-service {
            host = localhost
            port = 9852
        }
        frontend-template-provider {
            host = ${template-amazon-s3-host}
            port = ${template-amazon-s3-port}
            protocol = ${template-amazon-s3-protocol}
            path = ${template-amazon-s3-path}
        }


    }
}

contact-frontend {
    host="http://localhost:9250"
}

government-gateway-sign-in {
    host="http://localhost:9025/gg/sign-in"
}

identity-verification-uplift {
    host="http://localhost:9948/mdtp/uplift"
}

confirmFP {
    url="http://localhost:9010/protect-your-lifetime-allowance/apply-for-fp16/"
}

ipStart {
    url="http://localhost:9010/protect-your-lifetime-allowance/apply-for-ip16-pensions-taken/"
}

ip14Start {
    url="http://localhost:9010/protect-your-lifetime-allowance/apply-for-ip14-pensions-taken/"
}

existingProtections {
    url="http://localhost:9010/protect-your-lifetime-allowance/existing-protections/"
}

not-authorised-callback {
    url="http://localhost:9010/protect-your-lifetime-allowance/not-authorised"
}

pta-frontend {
    url="http://localhost:9232/personal-account"
}

feedback-survey-frontend {
    url="http://localhost:9514/feedback-survey/?origin=PLA"
}

valid-protection-status = "metric1"
invalid-protection-status = "metric2"
not-found-protection-status = "metric3"